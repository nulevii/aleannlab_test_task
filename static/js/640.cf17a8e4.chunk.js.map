{"version":3,"file":"static/js/640.cf17a8e4.chunk.js","mappings":"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","sources":["components/detailed-job/general-information/apply-button/index.tsx","webpack://aleannlab_test_task/./src/components/detailed-job/general-information/style.module.css?85cf","components/detailed-job/general-information/Share.tsx","utilities/useCopyToClipboard.ts","components/detailed-job/general-information/index.tsx","utilities/splitDescription.ts","utilities/useTraceWindowWidth.ts","utilities/sallaryConverter.ts","webpack://aleannlab_test_task/./src/components/detailed-job/aditional-info/style.module.css?af9e","components/detailed-job/aditional-info/index.tsx","webpack://aleannlab_test_task/./src/components/detailed-job/attached-images/style.module.css?d400","components/detailed-job/attached-images/index.tsx","components/detailed-job/contacts/map/index.tsx","webpack://aleannlab_test_task/./src/components/detailed-job/contacts/style.module.css?860c","components/detailed-job/contacts/index.tsx","utilities/convertPhone.ts","webpack://aleannlab_test_task/./src/components/detailed-job/style.module.css?27e8","components/detailed-job/index.tsx"],"sourcesContent":["export function ApplyButton ({ styles }: { styles: string }) {\r\n  return (<button className={styles}>Apply now</button>)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"blockWrapper\":\"style_blockWrapper__Xmnvq\",\"jobDetailsSection\":\"style_jobDetailsSection__YlNX1\",\"sectionHeading\":\"style_sectionHeading__WuNpQ\",\"sectionLine\":\"style_sectionLine__af5CQ\",\"helperLink\":\"style_helperLink__-CD5N\",\"saveLink\":\"style_saveLink__hInA4\",\"starIcon\":\"style_starIcon__gT-w1\",\"favoriteBookmark\":\"style_favoriteBookmark__lckW3\",\"shareIcon\":\"style_shareIcon__XKJMz\",\"applyButton\":\"style_applyButton__6RBLz\",\"generalDesription\":\"style_generalDesription__M0Js6\",\"description\":\"style_description__r840Z\",\"createdDate\":\"style_createdDate__Ue3eP\",\"salary\":\"style_salary__sOeRH\",\"textBlock\":\"style_textBlock__i2pGw\",\"textCaption\":\"style_textCaption__BIVBL\",\"benefitsCaption\":\"style_benefitsCaption__UYXxo\",\"benifit\":\"style_benifit__Lyrnn\",\"applyButtonMobile\":\"style_applyButtonMobile__58nJO\",\"socialMedia\":\"style_socialMedia__e14+i\",\"socialMediaWrapper\":\"style_socialMediaWrapper__D0Xiy\",\"buttonsWrapper\":\"style_buttonsWrapper__BMytW\",\"linkWrapper\":\"style_linkWrapper__vGfpj\",\"linkIcon\":\"style_linkIcon__Ez7VU\",\"closeIcon\":\"style_closeIcon__N8R86\",\"copyNotation\":\"style_copyNotation__LOXZG\"};","import {\r\n  EmailShareButton,\r\n  FacebookShareButton,\r\n  LinkedinShareButton,\r\n  TelegramShareButton,\r\n  TwitterShareButton,\r\n  ViberShareButton,\r\n  WhatsappShareButton,\r\n  EmailIcon,\r\n  FacebookIcon,\r\n  LinkedinIcon,\r\n  TelegramIcon,\r\n  TwitterIcon,\r\n  ViberIcon,\r\n  WhatsappIcon\r\n} from 'react-share'\r\n\r\nimport { useCopyToClipboard } from '../../../utilities/useCopyToClipboard'\r\nimport sprite from '../../../assets/icons.svg'\r\nimport styles from './style.module.css'\r\n\r\nconst shareUrl = window.location.href\r\n\r\nexport function Share ({\r\n  title,\r\n  setShare\r\n}: {\r\n  title: string\r\n  setShare: React.Dispatch<React.SetStateAction<boolean>>\r\n}) {\r\n  const [copiedText, copy]: [\r\n    string | null,\r\n    () => Promise<boolean>\r\n  ] = useCopyToClipboard()\r\n  return (\r\n    <div className={styles.socialMedia}>\r\n      <div className={styles.socialMediaWrapper}>\r\n        <button\r\n          onClick={() => {\r\n            setShare(false)\r\n          }}\r\n        >\r\n          <svg id=\"url\" className={styles.closeIcon}>\r\n            <use href={sprite + '#close'}></use>\r\n          </svg>\r\n        </button>\r\n        <div className={styles.buttonsWrapper}>\r\n          <button\r\n            onClick={() => {\r\n              void copy()\r\n            }}\r\n            className={styles.linkWrapper}\r\n          >\r\n            <svg id=\"url\" className={styles.linkIcon}>\r\n              <use href={sprite + '#link'}></use>\r\n            </svg>\r\n          </button>\r\n\r\n          <EmailShareButton\r\n            className={styles.shareButton}\r\n            url={shareUrl}\r\n            title={title}\r\n          >\r\n            <EmailIcon size={32} round={true} />\r\n          </EmailShareButton>\r\n          <FacebookShareButton\r\n            className={styles.shareButton}\r\n            url={shareUrl}\r\n            title={title}\r\n          >\r\n            <FacebookIcon size={32} round={true} />\r\n          </FacebookShareButton>\r\n          <LinkedinShareButton\r\n            className={styles.shareButton}\r\n            url={shareUrl}\r\n            title={title}\r\n          >\r\n            <LinkedinIcon size={32} round={true} />\r\n          </LinkedinShareButton>\r\n          <TelegramShareButton\r\n            className={styles.shareButton}\r\n            url={shareUrl}\r\n            title={title}\r\n          >\r\n            <TelegramIcon size={32} round={true} />\r\n          </TelegramShareButton>\r\n          <TwitterShareButton\r\n            className={styles.shareButton}\r\n            url={shareUrl}\r\n            title={title}\r\n          >\r\n            <TwitterIcon size={32} round={true} />\r\n          </TwitterShareButton>\r\n          <ViberShareButton\r\n            className={styles.shareButton}\r\n            url={shareUrl}\r\n            title={title}\r\n          >\r\n            <ViberIcon size={32} round={true} />\r\n          </ViberShareButton>\r\n          <WhatsappShareButton\r\n            className={styles.shareButton}\r\n            url={shareUrl}\r\n            title={title}\r\n          >\r\n            <WhatsappIcon size={32} round={true} />\r\n          </WhatsappShareButton>\r\n        </div>\r\n        <p className={styles.copyNotation}>{copiedText ?? ''}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\n\r\ntype CopiedValue = string | null\r\n\r\ntype CopyFn = () => Promise<boolean> // Return success\r\n\r\nexport function useCopyToClipboard (): [CopiedValue, CopyFn] {\r\n  const [copiedText, setCopiedText] = useState<CopiedValue>(null)\r\n\r\n  const copy: CopyFn = async () => {\r\n    if (!navigator?.clipboard) {\r\n      setCopiedText('Clipboard not supported')\r\n      console.log(copiedText)\r\n      setTimeout(() => {\r\n        setCopiedText(null)\r\n      }, 1000)\r\n\r\n      return false\r\n    }\r\n\r\n    // Try to save to clipboard then save it in the state if worked\r\n\r\n    try {\r\n      await navigator.clipboard.writeText(document.URL)\r\n\r\n      setCopiedText('Text copied')\r\n      setTimeout(() => {\r\n        setCopiedText(null)\r\n      }, 1000)\r\n\r\n      return true\r\n    } catch (error) {\r\n      setCopiedText('Copy failed')\r\n      setTimeout(() => {\r\n        setCopiedText(null)\r\n      }, 1000)\r\n\r\n      return false\r\n    }\r\n  }\r\n\r\n  return [copiedText, copy]\r\n}\r\n","import { useState, useMemo } from 'react'\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\n\r\nimport { DataInterface } from '../../../utilities/dataInterface'\r\nimport { splitDescription } from '../../../utilities/splitDescription'\r\nimport { generateKey } from '../../../utilities/keyGenerator'\r\n\r\nimport { useBookmarksContext } from '../../../utilities/useToggleBookmark'\r\nimport { useTraceWindowWidth } from '../../../utilities/useTraceWindowWidth'\r\nimport { convertSalary } from '../../../utilities/sallaryConverter'\r\nimport { ApplyButton } from './apply-button'\r\nimport { Share } from './Share'\r\nimport styles from './style.module.css'\r\nimport sprite from '../../../assets/icons.svg'\r\n\r\ndayjs.extend(relativeTime)\r\n\r\nfunction GeneralInformation ({\r\n  id,\r\n  title,\r\n  salary,\r\n  createdAt,\r\n  description\r\n}: Pick<DataInterface, 'id' | 'title' | 'salary' | 'createdAt' | 'description'>) {\r\n  const [share, setShare] = useState<boolean>(false)\r\n\r\n  const {\r\n    benefits: textBenefits,\r\n    benefitsArr: textBenefitsArr,\r\n    generalInfo,\r\n    responsopilities,\r\n    responsopilitiesText\r\n  } = splitDescription(description)\r\n\r\n  const { bookMarks, toggleBookmark } = useBookmarksContext()\r\n  const isJobFavorite = useMemo(() => {\r\n    if (bookMarks.find((jobId: string) => id === jobId)) {\r\n      return true\r\n    }\r\n    return false\r\n  }, [bookMarks])\r\n\r\n  const windowWidth = useTraceWindowWidth()\r\n\r\n  const createdTime = dayjs(createdAt).fromNow()\r\n  const dateTime = dayjs(createdAt).format('DD/MM/YYYY')\r\n\r\n  const convertedSalary = convertSalary(salary)\r\n  return (\r\n    <>\r\n      <section className={styles.jobDetailsSection}>\r\n        <div className={styles.blockWrapper}>\r\n          <h2 className={styles.sectionHeading}>Job Details</h2>\r\n          <hr className={styles.sectionLine} />\r\n          <button\r\n            className={`${styles.helperLink} ${styles.saveLink}`}\r\n            onClick={() => {\r\n              toggleBookmark(id)\r\n            }}\r\n          >\r\n            <svg\r\n              className={`${styles.starIcon} ${\r\n                isJobFavorite ? styles.favoriteBookmark : ''\r\n              }`}\r\n            >\r\n              <use\r\n                href={sprite + (windowWidth >= 768 ? '#bookmark' : '#star')}\r\n              ></use>\r\n            </svg>\r\n            Save to my list\r\n          </button>\r\n          <button\r\n            className={styles.helperLink}\r\n            onClick={() => setShare(!share)}\r\n          >\r\n            <svg className={styles.shareIcon}>\r\n              <use href={sprite + '#share'}></use>\r\n            </svg>\r\n            Share\r\n          </button>\r\n        </div>\r\n\r\n        <ApplyButton\r\n          styles={`mobileHidden ${styles.applyButton}`}\r\n        ></ApplyButton>\r\n\r\n        <div className={`${styles.blockWrapper} ${styles.generalDesription}`}>\r\n          <p className={styles.description}>{title}</p>\r\n          <time dateTime={dateTime} className={styles.createdDate}>\r\n            Posted {createdTime}\r\n          </time>\r\n          <p className={styles.salary}>\r\n            <span>Brutto, per year </span>\r\n            <strong>{convertedSalary}</strong>\r\n          </p>\r\n        </div>\r\n        <p className={styles.textBlock}>{generalInfo}</p>\r\n        <h3 className={styles.textCaption}>{responsopilities}</h3>\r\n        <p className={styles.textBlock}>{responsopilitiesText}</p>\r\n        <h3 className={styles.textCaption}>{textBenefits}</h3>\r\n\r\n        <h4 className={styles.benefitsCaption}>\r\n          Our physicians enjoy a wide range of benefits, including:\r\n        </h4>\r\n        <ul className={styles.textBlock}>\r\n          {textBenefitsArr.map((benefit) => (\r\n            <li className={styles.benifit} key={generateKey()}>\r\n              {benefit}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <ApplyButton\r\n          styles={`${styles.applyButtonMobile} ${styles.applyButton}`}\r\n        ></ApplyButton>\r\n        {share ? <Share setShare={setShare} title={title} /> : ''}\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GeneralInformation\r\n","export const splitDescription = (description: string) => {\r\n  const result = description\r\n    .split(/\\n|\\t/)\r\n    .map((element: string) => element.trim())\r\n    .filter((entry: string) => entry !== '')\r\n  const benefitsArr = result[4].split('. ')\r\n  return {\r\n    generalInfo: result[0],\r\n    responsopilities: result[1],\r\n    responsopilitiesText: result[2],\r\n    benefits: result[3],\r\n    benefitsArr\r\n  }\r\n}\r\n","import { useState, useLayoutEffect } from 'react'\r\n\r\nexport const useTraceWindowWidth = () => {\r\n  const [windowWidth, setWindowWidth] = useState(0)\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      setWindowWidth(window.innerWidth)\r\n    }\r\n    window.addEventListener('resize', updateSize)\r\n    updateSize()\r\n    return () => window.removeEventListener('resize', updateSize)\r\n  }, [])\r\n\r\n  return windowWidth\r\n}\r\n","export const convertSalary = (salary: string) => {\r\n  const convertedSalary = salary.replace(/k/g, ' 000').replace('-', '—')\r\n  return `€ ${convertedSalary}`\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"benifitsSection\":\"style_benifitsSection__a7yxZ\",\"sectionHeading\":\"style_sectionHeading__ZZmq2\",\"sectionLine\":\"style_sectionLine__ExVuR\",\"companyImagesList\":\"style_companyImagesList__oyyUB\",\"overflow-x-hidden\":\"style_overflow-x-hidden__S0cPo\",\"overflow-y-hidden\":\"style_overflow-y-hidden__H4L4N\",\"companyImage\":\"style_companyImage__WAo-k\",\"AditionalInfoListCaption\":\"style_AditionalInfoListCaption__S6WFI\",\"benifitsList\":\"style_benifitsList__DPQJJ\",\"employmenTypeList\":\"style_employmenTypeList__0UTn9\",\"employmentType\":\"style_employmentType__754Em\",\"benifit\":\"style_benifit__kPign\"};","import { DataInterface } from '../../../utilities/dataInterface'\r\nimport styles from './style.module.css'\r\nfunction AditionalInfo ({\r\n  benefits,\r\n  employmentType\r\n}: {\r\n  employmentType: DataInterface['employment_type']\r\n  benefits: DataInterface['benefits']\r\n}) {\r\n  return (\r\n    <section className={styles.benifitsSection}>\r\n      <h2 className={styles.sectionHeading}>Additional info</h2>\r\n      <hr className={styles.sectionLine} />\r\n      <h3 className={styles.AditionalInfoListCaption}>Employment type</h3>\r\n      <ul className={styles.employmenTypeList}>\r\n        {employmentType.map((type) => (\r\n          <li className={styles.employmentType} key={type}>\r\n            {type}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <h3 className={styles.AditionalInfoListCaption}>Benefits</h3>\r\n      <ul className={styles.benifitsList }>\r\n        {benefits.map((benifit) => (\r\n          <li className={styles.benifit} key={benifit}>\r\n            {benifit}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AditionalInfo\r\n","// extracted by mini-css-extract-plugin\nexport default {\"imagesSection\":\"style_imagesSection__6XYT3\",\"sectionHeading\":\"style_sectionHeading__hqroO\",\"sectionLine\":\"style_sectionLine__czE23\",\"companyImagesList\":\"style_companyImagesList__H39s7\",\"overflow-x-hidden\":\"style_overflow-x-hidden__P4+da\",\"overflow-y-hidden\":\"style_overflow-y-hidden__CBpPQ\",\"companyImage\":\"style_companyImage__PChyH\"};","import { DataInterface } from '../../../utilities/dataInterface'\r\nimport { generateKey } from '../../../utilities/keyGenerator'\r\n\r\nimport styles from './style.module.css'\r\n\r\nfunction AttachedImages ({\r\n  images,\r\n  name\r\n}: {\r\n  images: DataInterface['pictures']\r\n  name: DataInterface['name']\r\n}) {\r\n  return (\r\n    <section className={styles.imagesSection}>\r\n      <h3 className={styles.sectionHeading}>Attached images</h3>\r\n      <hr className={styles.sectionLine} />\r\n      <ul className={styles.companyImagesList}>\r\n        {images.map((image) => (\r\n          <img className={styles.companyImage} key={generateKey()} src={image} alt=\"company\"></img>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default AttachedImages\r\n","import { useMemo } from 'react'\r\nimport { Map, Overlay } from 'pigeon-maps'\r\nimport sprite from '../../../../assets/icons.svg'\r\n\r\nconst LocationMap = ({ styles, location }: {\r\n  styles: Record<string, string>\r\n  location: { lat: number, long: number }\r\n\r\n}) => {\r\n  const center: [number, number] = useMemo(() => ([location.lat, location.long]), [])\r\n\r\n  return (\r\n    <Map\r\n      boxClassname={styles.map}\r\n      height={200}\r\n      defaultCenter={center}\r\n      defaultZoom={3} >\r\n      <Overlay anchor={center} offset={[13, 36]}>\r\n        <svg className={styles.mapLocationIcon}>\r\n          <use href={sprite + '#location'}></use>\r\n        </svg>\r\n      </Overlay>\r\n    </Map>\r\n  )\r\n}\r\n\r\nexport default LocationMap\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"style_contactsSection__HJIhP\",\"sectionHeading\":\"style_sectionHeading__blNvd\",\"sectionLine\":\"style_sectionLine__+WCJ-\",\"addresWrapper\":\"style_addresWrapper__-Zkys\",\"address\":\"style_address__FlyOJ\",\"descriptionName\":\"style_descriptionName__Q+8Rr\",\"locationIcon\":\"style_locationIcon__ffqL0\",\"location\":\"style_location__3k8Tf\",\"phone\":\"style_phone__JbNJC\",\"email\":\"style_email__B6Nnx\",\"map\":\"style_map__v-OK3\",\"mapLocationIcon\":\"style_mapLocationIcon__kUH01\"};","import LocationMap from './map'\r\n\r\nimport { DataInterface } from '../../../utilities/dataInterface'\r\nimport { convertPhone } from '../../../utilities/convertPhone'\r\nimport styles from './style.module.css'\r\nimport sprite from '../../../assets/icons.svg'\r\n\r\nfunction Contacts ({\r\n  address,\r\n  phone,\r\n  email,\r\n  location,\r\n  name\r\n}: Pick<DataInterface, 'address' | 'phone' | 'email' | 'location' | 'name'>) {\r\n  const convertedPhone = convertPhone(phone)\r\n  return (\r\n    <section className={styles.contactsSection}>\r\n      <h2 className={styles.sectionHeading}>Contacts</h2>\r\n      <hr className={styles.sectionLine} />\r\n      <article className={styles.addresWrapper}>\r\n        <address className={styles.address}>\r\n          <h3 className={styles.descriptionName}>\r\n            Department name.\r\n            <br />\r\n            {name}\r\n          </h3>\r\n\r\n          <p className={styles.location}>\r\n            <svg className={styles.locationIcon}>\r\n              <use href={sprite + '#location'}></use>\r\n            </svg>\r\n            {address}\r\n          </p>\r\n          <a className={styles.phone} href={`tel:${phone}`}>\r\n            {convertedPhone}\r\n          </a>\r\n          <a className={styles.email} href={`mailto:${email}`}>\r\n            {email}\r\n          </a>\r\n        </address>\r\n        <LocationMap\r\n          styles={styles}\r\n          location={{ lat: location.lat, long: location.long }}\r\n        ></LocationMap>\r\n      </article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contacts\r\n","export const convertPhone = (phone: string) => {\r\n  return phone\r\n    .replace(/(?<=\\d\\d)\\d\\d/, (digits) => ` (${digits}) `)\r\n    .replace(/\\d\\d\\d\\d$/, (digits) => `-${digits},`)\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"jobDetailsMain\":\"style_jobDetailsMain__B2TBI\",\"sectionsWrapper\":\"style_sectionsWrapper__PAlAD\",\"jobDetailsFooter\":\"style_jobDetailsFooter__Kztso\",\"returnButton\":\"style_returnButton__vGsP9\",\"arrowIcon\":\"style_arrowIcon__rSDx+\"};","import { useParams, Navigate, useNavigate } from 'react-router-dom'\r\nimport { DataInterface } from '../../utilities/dataInterface'\r\n\r\nimport GeneralInformation from './general-information'\r\nimport AditionalInfo from './aditional-info'\r\nimport AttachedImages from './attached-images'\r\nimport Contacts from './contacts'\r\nimport styles from './style.module.css'\r\nimport sprite from '../../assets/icons.svg'\r\n\r\nfunction DetailedJob ({\r\n  jobs\r\n}: {\r\n  jobs: DataInterface[]\r\n}) {\r\n  const navigate = useNavigate()\r\n  const { id: pageId } = useParams()\r\n\r\n  const jobObj = jobs.find(({ id }) => id === pageId)\r\n  if (!jobObj) {\r\n    return <Navigate to=\"/aleannlab_test_task/job_list/1\" />\r\n  }\r\n\r\n  const {\r\n    id,\r\n    title,\r\n    pictures: images,\r\n    createdAt,\r\n    address,\r\n    phone,\r\n    email,\r\n    location,\r\n    description,\r\n    salary,\r\n    benefits,\r\n    employment_type: employmentType,\r\n    name\r\n  } = jobObj\r\n\r\n  return (\r\n    <>\r\n      <main className={styles.jobDetailsMain}>\r\n        <div className={styles.sectionsWrapper}>\r\n          <GeneralInformation\r\n            id={id}\r\n            title={title}\r\n            createdAt={createdAt}\r\n            description={description}\r\n            salary={salary}\r\n          ></GeneralInformation>\r\n\r\n          <AttachedImages images={images} name={name}></AttachedImages>\r\n\r\n          <AditionalInfo\r\n            employmentType={employmentType}\r\n            benefits={benefits}\r\n          ></AditionalInfo>\r\n        </div>\r\n        <Contacts\r\n          address={address}\r\n          phone={phone}\r\n          email={email}\r\n          location={location}\r\n          name={name}\r\n        ></Contacts>\r\n      </main>\r\n      <footer className={`mobileHidden ${styles.jobDetailsFooter}`}>\r\n        <button onClick={() => navigate(-1)} className={styles.returnButton}>\r\n          <svg className={styles.arrowIcon}>\r\n            <use href={sprite + '#arrow-left-detailed-job'}></use>\r\n          </svg>\r\n          RETURN TO JOB BOARD\r\n        </button>\r\n      </footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DetailedJob\r\n"],"names":["ApplyButton","styles","className","shareUrl","window","location","href","Share","title","setShare","useState","copiedText","setCopiedText","copy","navigator","clipboard","console","log","setTimeout","writeText","document","URL","useCopyToClipboard","onClick","id","sprite","EmailShareButton","url","EmailIcon","size","round","FacebookShareButton","FacebookIcon","LinkedinShareButton","LinkedinIcon","TelegramShareButton","TelegramIcon","TwitterShareButton","TwitterIcon","ViberShareButton","ViberIcon","WhatsappShareButton","WhatsappIcon","dayjs","relativeTime","salary","createdAt","description","share","result","split","map","element","trim","filter","entry","benefitsArr","generalInfo","responsopilities","responsopilitiesText","benefits","splitDescription","textBenefits","textBenefitsArr","useBookmarksContext","bookMarks","toggleBookmark","isJobFavorite","useMemo","find","jobId","windowWidth","setWindowWidth","useLayoutEffect","updateSize","innerWidth","addEventListener","removeEventListener","useTraceWindowWidth","createdTime","fromNow","dateTime","format","convertedSalary","replace","convertSalary","benefit","generateKey","employmentType","type","benifit","images","name","image","src","alt","center","lat","long","boxClassname","height","defaultCenter","defaultZoom","anchor","offset","mapLocationIcon","address","phone","email","convertedPhone","digits","convertPhone","jobs","navigate","useNavigate","pageId","useParams","jobObj","to","pictures","employment_type"],"sourceRoot":""}